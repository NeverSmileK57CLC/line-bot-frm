{
  "name": "Line-bot-frm",
  "tagline": "Automatic chat bot using Line Bot",
  "body": "![ABIBOT2en.png](/uploads/images/a7ee57d6023a3b04d62466bce4105299b74ec606/76bfd3476101b62fc0fdb9090ed88b1e44f50c2c.png) \r\n\r\n\r\nKhoảng 2 tháng trước tôi được giao cho nhiệm vụ tìm hiểu một công cụ dùng để chat tự động thông qua ứng dụng LINE, lúc đầu mới tìm hiểu thật sự khá khó khăn vì chưa có kiến thức gì cũng như luồng hoạt động của công cụ chat tự động. Vì vậy hôm nay tôi viết bài viết này để chia sẻ về cách tạo ra một ứng dụng Rails sử dụng LINE BOT API để có thể chat tự động.\r\n\r\nTrong bài viết này tôi sẽ giới thiệu tổng quan về LINE BOT API, luồng hoạt động và demo một ứng dụng Rails chat trực tiếp trên ứng dụng LINE.\r\n\r\n# LINE BOT API là gì?\r\nLINE Bot API cho phép ta tương tác trực tiếp với người dùng cá nhân thông qua tài khoản Line chính thức, với BOT API ta có thể tự động gửi những phản hồi được tùy chỉnh đến người dùng nếu họ kết bạn với tài khoản BOT cũng như gửi tin nhắn đến. Và ta có thể gửi những tin nhắn tương tác từ server BOT API tới người dùng bất cứ lúc nào.\r\n## BOT API làm việc như thế nào?\r\nSử dụng BOT API, ta có thể gửi thông tin giữa server và ứng dụng LINE của người dùng thông qua LINE platform. Các request được gửi sử dụng dựa trên nền JSON API.\r\n\r\n![bot_img001.png](/uploads/images/a7ee57d6023a3b04d62466bce4105299b74ec606/a0337128a0a44ba1dcf4308727efb744f6605141.png)\r\n\r\n### Kiến trúc\r\nServer của chúng ta được liên kết với LINE platform. Khi ứng dụng LINE của người dùng gửi kết bạn hay gửi tin nhắn với tài khoản BOT hay gọi chung là có request gửi cho server, BOT API sẽ xử lý để biến các request đó thành JSON request và gửi cho URL của server mà ta đã đăng ký, khi đó, tùy từng cách xử lý thì ta sẽ gửi lại phản hồi cho người dùng. Và đương nhiên, phản hồi đó sẽ hiện trực tiếp trên box chat giữa người dùng và BOT trên ứng dụng LINE.\r\n\r\n### Nhận các tin nhắn/thao tác\r\nCó hai loại thông tin được gửi từ LINE platform tới server khi người dùng tương tác với tài khoản BOT của bạn.\r\n - Người dùng gửi tin nhắn (message)\r\n - Người dùng thực hiện một thao tác như kết bạn (operation)\r\n\r\nThông tin được gửi thông qua giao thức HTTP tới đường dẫn URL mà ta đã đăng ký. Một xâu JSON được tạo ra trong phần thân của request cho thao tác đó, nó phụ thuộc mà kiểu thao tác mà người dùng thực hiện.\r\n\r\nĐây là một ví dụ về JSON format khi người dùng gửi request cho server BOT API sẽ có dạng:\r\n\r\n```JSON\r\n{\r\n  \"result\":[\r\n    {\r\n      \"from\":\"u206d25c2ea6bd87c17655609a1c37cb8\",\r\n      \"fromChannel\":1341301815,\r\n      \"to\":[\"u0cc15697597f61dd8b01cea8b027050e\"],\r\n      \"toChannel\":1441301333,\r\n      \"eventType\":\"138311609000106303\",\r\n      \"id\":\"ABCDEF-12345678901\",\r\n      \"content\":{\r\n        ...\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n```TextileToHtml\r\n|_.Tên thuộc tính|_.Giá trị (Ví dụ)|_.Mô tả|\r\n|from|\"u206d25c2ea6bd87c17655609a1c37cb8\"|MID của người gửi, giá trị này được LINE fix sẵn|\r\n|fromChannel|1341301815|Channel ID của người gửi, giá trị này được LINE fix sẵn|\r\n|to|[\"u0cc15697597f61dd8b01cea8b027050e\"]|Một mảng các MID gửi đến|\r\n|toChannel|1441301333|Channel ID của BOT|\r\n|eventType|“138311609000106303”|Kiểu dữ liệu người dùng gửi: “138311609000106303”: Message, “138311609100106403”: Operation|\r\n```\r\n```\r\nPOST /callback HTTP/1.1\r\nHost: YOUR_SERVER_HOST_NAME\r\nContent-type: application/json; charset=UTF-8\r\nX-LINE-ChannelSignature: /xZcekiWAiCrwq5dC+wBwBf6gQ33i1jRAo01KAVO3/U=\r\n\r\n{\"result\":[{...}, {...}]}\r\n```\r\nTất cả các request bao gồm phần chữ kí ở trên header. Server BOT API sẽ sử dụng chữ kí đó để kiểm tra những request đó được gửi từ LINE platform. Nếu request không được gửi từ LINE platform, thì request đó sẽ không hợp lệ thì một sự kiện xử lý không hợp lệ được kích hoạt.\r\n\r\n### Lời gọi API\r\nLINE platform cung cấp các API cho phép gửi thông tin từ server BOT API tới người dùng:\r\n- Gửi tin nhắn tới nhiều người dùng mà đã kết bạn với tài khoản BOT\r\n- Lấy nickname của người dùng\r\n\r\nServer BOT có thể gọi các API để gửi tin nhắn tới người dùng bất cứ lúc nào. Khi lời gọi API được tạo ra, một `Channel access token` hay `Channel ID`, `Channel secret` và `MID` cho Channel của BOT và được đặt ở phần header của request để xác minh rằng lời gọi được gọi từ server BOT API. Ta có thể lấy các thông tin của Channel như ID, secret  và MID ở [https://developers.line.me/channels/xxx](https://developers.line.me/channels) khi ta đăng ký một Channel, chi tiết tôi sẽ trình bày ở phần demo sau.\r\n## Ta có thể làm gì với LINE BOT API?\r\n- Gửi và nhận tin nhắn từ người dùng mà đã kết bạn\r\n- Gửi các tin nhắn đa phương tiện như hình ảnh, link...\r\n- Gửi các sticker\r\n- Cho người dùng duyệt các link trên chính ứng dụng LINE\r\n\r\n# Demo ứng dụng Rails chat tự động\r\nTrong phần này tôi sẽ hướng dẫn cách tạo một Channel LINE cũng như ứng dụng Rails để xử lý request cho phép tự động gửi lại tin nhắn cho người dùng, để đơn giản tôi sẽ gửi lại những gì người dùng gửi cho BOT.\r\n## Tạo tài khoản LINE\r\nBước đầu tiên ta phải tải ứng dụng LINE về điện thoại, đăng ký một tài khoản và sử dụng tài khoản đó để đăng nhập ở [LINE đăng nhập](https://access.line.me/dialog/oauth/weblogin?client_id=1459630796&redirect_uri=https://business.line.me/auth?redirectUri%3Dhttps://business.line.me/sso/auth?response_type%253Dcode%2526scope%253Dopenid%2526redirect_uri%253Dhttps%25253A%25252F%25252Fdevelopers.line.me%25252Fsso%25252Ftoken%25253FredirectUrl%25253Dhttps%25253A%25252F%25252Fdevelopers.line.me%25252Fchannels%25252F%2526client_id%253D2%2526state%253DLYs7KqZ%25252Bxb4dokc4m2sZWyiylHySmHWZ&response_type=code&state=vfxrkZ) (ở phần này LINE sẽ gửi code về điện thoại để xác nhận).\r\n\r\nTiếp theo ta sẽ tạo ra một Channel bằng cách vào trang [Line Business Center](https://business.line.me/accounts/migration/email/input), khi tạo xong LINE sẽ cung cấp cho ta Channel ID, Channel Secret và MID tương tự như:\r\n\r\n![Screenshot from 2016-08-28 00:12:47.png](/uploads/images/a7ee57d6023a3b04d62466bce4105299b74ec606/92d89aafc7bb3f517375401128eb9c79e1121b02.png) \r\n\r\nNhững thông tin này sẽ cần thiết khi ta tạo server dùng để xác minh.\r\n\r\n## Tạo ứng dụng Rails\r\nĐể đơn giản ta tạo một ứng dụng Rails gửi lại phản hồi cho người dùng những gì mà người dùng nhập, và không cần phải lưu vào cơ sở dữ liệu. Ứng dụng sẽ được deploy lên Heroku và sẽ được setting ở trong LINE Channel.\r\n\r\nTùy vào từng mục đích khác nhau thì ta có thể chọn cách xử lý.\r\n\r\nTạo một ứng dụng Rails:\r\n```Ruby\r\nrails new line-bot-api\r\n```\r\nĐầu tiên, ta cài đặt đường dẫn CallbackURL để cài đặt những thông tin cơ bản\r\n`config/routes.rb`\r\n```Ruby\r\nRails.application.routes.draw do\r\n  post \"/callback\", to: \"webhook#callback\"\r\nend\r\n```\r\nTiếp theo ta tạo một thư viện để gọi LINE BOT API\r\n`lib/line_bot.rb` và đừng quên thêm `config.autoload_paths += %W(#{config.root}/lib)` trong `config/application.rb`\r\n\r\n```Ruby\r\n# lib/line_bot.rb\r\nrequire \"faraday\"\r\nrequire \"faraday_middleware\"\r\nrequire \"json\"\r\nrequire \"pp\"\r\n\r\nclass LineBot\r\n  module ContentType\r\n    TEXT = 1\r\n    IMAGE = 2\r\n    VIDEO = 3\r\n    AUDIO = 4\r\n    LOCATION = 7\r\n    STICKER = 8\r\n    CONTACT = 10\r\n  end\r\n  module ToType\r\n    USER = 1\r\n  end\r\n\r\n  END_POINT = \"https://trialbot-api.line.me\" # Fixed value\r\n  TO_CHANNEL = 1383378250 # Fixed value\r\n  EVENT_TYPE = \"138311608800106203\" # Fixed value\r\n\r\n  def initialize\r\n    @channel_id = ENV[\"LINE_CHANNEL_ID\"]\r\n    @channel_secret = ENV[\"LINE_CHANNEL_SECRET\"]\r\n    @channel_mid = ENV[\"LINE_CHANNEL_MID\"]\r\n    @proxy = ENV[\"LINE_OUTBOUND_PROXY\"]\r\n  end\r\n\r\n  def post path, data\r\n    client = Faraday.new url: END_POINT do |conn|\r\n      conn.request :json\r\n      conn.response :json, content_type: /\\bjson$/\r\n      conn.adapter Faraday.default_adapter\r\n      conn.proxy @proxy\r\n    end\r\n    res = client.post do |request|\r\n      request.url path\r\n      request.headers = {\r\n        \"Content-Type\" => \"application/json; charset=UTF-8\",\r\n        \"X-Line-ChannelID\" => @channel_id,\r\n        \"X-Line-ChannelSecret\" => @channel_secret,\r\n        \"X-Line-Trusted-User-With-ACL\" => @channel_mid,\r\n      }\r\n      request.body = data\r\n    end\r\n    res\r\n  end\r\n\r\n  def send line_ids, contentType, message, options = nil\r\n    message_type_name = case contentType\r\n      when ContentType::TEXT\r\n        \"text\"\r\n      when ContentType::IMAGE, ContentType::VIDEO\r\n        \"\"\r\n      when ContentType::AUDIO, ContentType::STICKER\r\n        \"contentMetadata\"\r\n      else\r\n        \"text\"\r\n      end\r\n\r\n    content = {\r\n      contentType: contentType,\r\n      toType: ToType::USER,\r\n      \"#{message_type_name}\": message\r\n    }\r\n    if options\r\n      options.each do |key, value|\r\n        content[key] = value\r\n      end\r\n    end\r\n    post \"/v1/events\", {\r\n      to: line_ids,\r\n      content: content,\r\n      toChannel: TO_CHANNEL,\r\n      eventType: EVENT_TYPE\r\n    }\r\n  end\r\nend\r\n```\r\nỞ hàm `send` ta có thể tùy chỉnh việc server có thể gửi những loại dữ liệu nào cho người dùng, chi tiết có thể xem tại [LINE BOT api reference](https://developers.line.me/bot-api/api-reference).\r\n\r\nTiếp theo, ta tạo controller `webhook_controller.rb` xử lý các request đến server. Ta phải disable CSRF (Cross-site request forgery), hàm `is_validate_signature` được hướng dẫn ở trang chủ [Line document](https://developers.line.me/bot-api/getting-started-with-bot-api-trial#signature_validation), ta chỉ việc copy thôi.\r\n`app/controller/webhook_controller.rb`\r\n```Ruby\r\nrequire \"line_bot\"\r\nclass WebhookController < ApplicationController\r\n  protect_from_forgery with: :null_session\r\n\r\n  def callback\r\n    unless is_validate_signature\r\n      render nothing: true, status: 470\r\n    end\r\n    result = params[:result][0]\r\n    content = result[\"content\"]\r\n\r\n    LineBot.new.send [content[\"from\"]], 1, content[\"text\"] # 1: Text\r\n    render nothing: true, status: :ok\r\n  end\r\n\r\n  private\r\n  def is_validate_signature\r\n    signature = request.headers[\"X-LINE-ChannelSignature\"]\r\n    channel_secret = ENV[\"LINE_CHANNEL_SECRET\"]\r\n    http_request_body = request.raw_post\r\n    hash = OpenSSL::HMAC::digest OpenSSL::Digest::SHA256.new, channel_secret, http_request_body\r\n    signature_answer = Base64.strict_encode64 hash\r\n    signature == signature_answer\r\n  end\r\nend\r\n```\r\nở câu lệnh\r\n```Ruby\r\nLineBot.new.send [content[\"from\"]], 1, content[\"text\"]\r\n```\r\nĐơn giản là lấy thông tin người nhận và gửi lại đúng đoạn tin nhắn họ gửi cho BOT.\r\n\r\nVậy là ta đã viết xong phần server xử lý tin nhắn, tiếp theo ta cần phải deploy lên production (sử dụng Heroku) và config đường dẫn callback cho Channel. Callback URL mặc định là `tenduongdan:443/callback`\r\n\r\n![Screenshot from 2016-08-28 09:13:57.png](/uploads/images/a7ee57d6023a3b04d62466bce4105299b74ec606/fe17fc3e7cb5d0901bb35f16a40c63e6459961ce.png) \r\n\r\nMọi người có thể tham khảo project mẫu https://github.com/NeverSmileK57CLC/line-bot-frm\r\nvà LINE BOT chat mà tôi đã demo.\r\n\r\n![bot_report.png](/uploads/images/a7ee57d6023a3b04d62466bce4105299b74ec606/772ecc17e9311ff008e81392c4e5e10367c044b0.png) \r\n\r\n# Tổng kết\r\nLINE BOT là một bộ API khá hay khi mà ta có thể tạo một server BOT để xử lý những tin nhắn mà người dùng gửi. Trong bài viết này do chưa có kinh nghiệm tôi chỉ giới thiệu sơ qua về LINE BOT API và demo một ví dụ đơn giản. Chủ đề này có ứng dụng khá cao khi có thể áp dụng Data Mining, Machine Learning vào để tạo ra những con BOT thông minh như Cortana, Siri hay đơn giản chỉ là một BOT hỏi đáp trên chính ứng dụng chat LINE.\r\n\r\nTham khảo:\r\n\r\n- https://developers.line.me/bot-api/overview\r\n- http://qiita.com/Arahabica/items/98e3d0d5b65269386dc4",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}